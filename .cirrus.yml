# content of service-account-credentials.json, used to access to Google Cloud Platform
gcp_credentials: ENCRYPTED[!e5f7207bd8d02d383733bef47e18296ac32e3b7d22eb480354e8dd8fdc0004be45a8a4e72c797bd66ee94eb3340fa363!]

#
# ENV VARIABLES
#
env:
  ### Shared variables
  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]
  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/SonarSource-sonar-scanner-jenkins-private-reader access_token]
  ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/SonarSource-sonar-scanner-jenkins-private-reader access_token]
  ARTIFACTORY_DEPLOY_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer
  ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/SonarSource-sonar-scanner-jenkins-qa-deployer access_token]
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa

  GCF_ACCESS_TOKEN: VAULT[development/kv/data/promote data.token]
  PROMOTE_URL: VAULT[development/kv/data/promote data.url]

  BURGR_URL: VAULT[development/kv/data/burgr data.url]
  BURGR_USERNAME: VAULT[development/kv/data/burgr data.cirrus_username]
  BURGR_PASSWORD: VAULT[development/kv/data/burgr data.cirrus_password]

  ### Project variables
  DEPLOY_PULL_REQUEST: true
  ARTIFACTS: org.jenkins-ci.plugins:sonar:hpi

#
# RE-USABLE CONFIGS
#
container_definition: &CONTAINER_DEFINITION
  image: us.gcr.io/sonarqube-team/base:j11-m3-latest
  cluster_name: cirrus-ci-cluster
  zone: us-central1-a
  namespace: default

only_qa: &ONLY_QA
  only_if: $CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*"

#
# TASKS
#
build_task:
  gke_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 3G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: VAULT[development/kv/data/next data.url]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  script:
    - source cirrus-env BUILD
    - regular_mvn_build_deploy_analyze
  cleanup_before_cache_script:
    - cleanup_maven_repository

linux_qa_task:
  depends_on:
    - build
  <<: *ONLY_QA
  gke_container:
    dockerfile: its/docker/Dockerfile
    builder_image_project: sonarqube-team
    builder_image_name: docker-builder-v20200915
    cluster_name: cirrus-ci-cluster
    zone: us-central1-a
    namespace: default
    cpu: 3
    memory: 8G
  env:
    BROWSER: chrome
    matrix:
      # If updating the JENKINS_VERSION, make sure that all installed plugins are compatible. See com.sonar.it.jenkins.SonarPluginTest
      # https://www.jenkins.io/doc/developer/plugin-development/choosing-jenkins-baseline/
      - SQ_VERSION: LATEST_RELEASE[8.9]
        JENKINS_VERSION: 2.361.1
        VERSION_OVERRIDES: git-server=1.9,sshd=3.0.3
      - SQ_VERSION: DEV
        JENKINS_VERSION: 2.361.1
        VERSION_OVERRIDES: git-server=1.9,sshd=3.0.3
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  qa_script:
    - ./cirrus/cirrus-qa.sh
  cleanup_before_cache_script:
    - cleanup_maven_repository
  on_failure:
    reports_artifacts:
      path: "**/target/**/logs/*"
    test_reports_artifacts:
      path: "**/target/surefire-reports/*"
    junit_artifacts:
      path: "**/target/surefire-reports/*.xml"
      format: junit

promote_task:
  depends_on:
    - linux_qa
  <<: *ONLY_QA
  gke_container:
    <<: *CONTAINER_DEFINITION
    cpu: 0.5
    memory: 500M
  env:
    GITHUB_TOKEN: VAULT[development/github/token/SonarSource-sonar-scanner-jenkins-promotion token]
  maven_cache:
    folder: $CIRRUS_WORKING_DIR/.m2/repository
  script:
    - cirrus_promote_maven
  cleanup_before_cache_script:
    - cleanup_maven_repository
